{"version":3,"sources":["index.js"],"names":["DEBOUNCE_DELAY","refs","form","document","querySelector","gallery","onButtonSearchImagesClick","e","preventDefault","searchQuery","currentTarget","elements","value","trim","onFetchImages","then","images","hits","length","console","log","totalHits","renderImages","catch","error","searchParams","URLSearchParams","key","image_type","orientation","safesearch","fetch","resolve","status","Error","response","json","markup","map","item","webformatURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","addEventListener"],"mappings":";;;AAqEC,aArED,QAAA,oBAEA,MAAMA,EAAiB,IAEjBC,EAAO,CACXC,KAAMC,SAASC,cAAc,gBAC7BC,QAASF,SAASC,cAAc,aAKlC,SAASE,EAA0BC,GACjCA,EAAEC,iBACIC,MAAAA,EAAcF,EAAEG,cAAcC,SAASF,YAAYG,MAAMC,OAC1DJ,GAGLK,EAAcL,GACXM,KAAKC,IACAA,GAAuB,IAAvBA,EAAOC,KAAKC,QAAgC,cAAhBF,EAAOC,KAC9BE,OAAAA,QAAQC,IACb,4EAGJD,QAAQC,wBAAwBJ,EAAOK,qBACvCF,QAAQC,IAAIJ,GACZM,EAAaN,EAAOC,QAErBM,MAAMC,GAASL,QAAQC,IAAII,IAGhC,SAASV,EAAcL,GACfgB,MAAAA,EAAe,IAAIC,gBAAgB,CACvCC,IAAK,qCACLC,WAAY,QACZC,YAAa,aACbC,YAAY,IAEPC,OAAAA,oCAAoCtB,KAAegB,KAAgBV,KAAKiB,IACzEA,GAAmB,MAAnBA,EAAQC,OACJ,MAAA,IAAIC,MAAMC,SAASF,QAEpBD,OAAAA,EAAQI,SAInB,SAASd,EAAaN,GACdqB,MAAAA,EAASrB,EACZsB,IAAIC,4CAEKA,EAAKC,sBAAsBD,EAAKE,+FAG1BF,EAAKG,iEAGLH,EAAKI,oEAGFJ,EAAKK,wEAGJL,EAAKM,yCAKxBC,KAAK,IACR7C,EAAKI,QAAQ0C,mBAAmB,YAAaV,GA3D/CpC,EAAKC,KAAK8C,iBAAiB,SAAU1C","file":"src.fa7c5e0f.js","sourceRoot":"../src","sourcesContent":["import './css/styles.css';\n\nconst DEBOUNCE_DELAY = 300;\n\nconst refs = {\n  form: document.querySelector('.search-form'),\n  gallery: document.querySelector('.gallery'),\n};\n\nrefs.form.addEventListener('submit', onButtonSearchImagesClick);\n\nfunction onButtonSearchImagesClick(e) {\n  e.preventDefault();\n  const searchQuery = e.currentTarget.elements.searchQuery.value.trim();\n  if (!searchQuery) {\n    return;\n  }\n  onFetchImages(searchQuery)\n    .then(images => {\n      if (images.hits.length === 0 || images.hits === 'undefined') {\n        return console.log(\n          'Sorry, there are no images matching your search query. Please try again.',\n        );\n      }\n      console.log(`Hooray! We found ${images.totalHits} images.`);\n      console.log(images);\n      renderImages(images.hits);\n    })\n    .catch(error => console.log(error));\n}\n\nfunction onFetchImages(searchQuery) {\n  const searchParams = new URLSearchParams({\n    key: '25243201-da43b78e8715fb1cc3094e420',\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n  });\n  return fetch(`https://pixabay.com/api/?q=${searchQuery}&${searchParams}`).then(resolve => {\n    if (resolve.status !== 200) {\n      throw new Error(response.status);\n    }\n    return resolve.json();\n  });\n}\n\nfunction renderImages(images) {\n  const markup = images\n    .map(item => {\n      return `<div class=\"photo-card\">\n  <img src=\"${item.webformatURL}\" alt=\"${item.tags}\" loading=\"lazy\" />\n  <div class=\"info\">\n    <p class=\"info-item\">\n      <b>Likes</b>${item.likes}\n    </p>\n    <p class=\"info-item\">\n      <b>Views</b>${item.views}\n    </p>\n    <p class=\"info-item\">\n      <b>Comments</b>${item.comments}\n    </p>\n    <p class=\"info-item\">\n      <b>Downloads</b>${item.downloads}\n    </p>\n  </div>\n</div>`;\n    })\n    .join('');\n  refs.gallery.insertAdjacentHTML('beforeend', markup);\n}\n"]}